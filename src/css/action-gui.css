/* Define size variables for responsiveness */
:root {
    --size-knobs: calc(6vmin + 2vmax); 
    --bs-border-radius: 0.2rem;
    --waveform-height: 80%; /* Default value, overridden dynamically */

}


/* ICON FROM BUTTON GROUPS */
.icon-svg {
    width: 80%;
    height: 80%;
    fill: currentColor; /* Dynamic color */
}

/* Remove the default dropdown arrow */
.btn.dropdown-toggle::after {
    display: none !important;
}


.action-gui-container {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    margin-top: auto; /* Keeps the container at the bottom of the sub-frame */
    /* Additional styling as needed */
}

.action-gui-container .col-4 {
    /* Center content vertically and horizontally */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    

}

/* Update: Remove .xyz-balance entirely.
   And set .xyz-sensors-toggle to have the same dimensions as .xyz-cosmic-lfo */
   .xyz-sensors-toggle {
    display: none; /* Hide by default */
    /* Default dimensions now match LFO buttons */
    width: 8vmin;
    height: 8vmin;
    margin: 0.5vmin;
}

/* Default (Extra-large screens: xl ≥1200px) */
.xyz-knobs {
    width: var(--size-knobs);
    height: var(--size-knobs);
    margin-bottom: 1vh;
}

/* Removed .xyz-balance; .xyz-sensors-toggle now stands alone */
 
.lfo-interaction-button, .xyz-cosmic-lfo {
    width: 8vmin;
    height: 8vmin;
    margin: 0.5vmin;
}

.freq-multiplier-btn-lfo {
    width: 5vmin;
    height: 5vmin;
    padding: 0%;
}

.xyz-param {
    width: 8vmin;
    height: 2vmin;
    font-size: 1.7vmin;
}

.transport-button, .interaction-button {
    width: 13vmin;
    height: 13vmin;
    margin-right: 3vw !important;
    margin-left: 1vw !important;
}

  /* Ensure the SVG inherits the button’s current color */
  .playback-switch svg {
    width: 60%;
    height: 60%;
    fill: currentColor;
    transition: fill 0.3s ease-in-out;
  }
  

/* Large screens (lg: ≥992px and <1200px) */
@media (max-width: 1199.98px) {
    .xyz-knobs {
        width: calc(var(--size-knobs) + 2vmin);
        height: calc(var(--size-knobs) + 2vmin);
    }
    /* Removed .xyz-balance; update .xyz-sensors-toggle */
    .xyz-sensors-toggle {
        width: 5vmin;
        height: 5vmin;
    }
    .playback-switch {
        width: 8vmin;
        height: 8vmin;
    }
    .lfo-interaction-button, .xyz-cosmic-lfo {
        width: 8vmin;
        height: 5vmin;
    }
    .xyz-param {
        width: 8vmin;
        height: 3.5vmin;
        font-size: 2.5vmin;
    }
    .transport-button,
    .interaction-button {
        width: 13vmin;
        height: 13vmin;
    }
}

/* Small screens (sm: ≥576px and <992px) */
@media (max-width: 991.98px) {
    .xyz-knobs {
        width: calc(var(--size-knobs) + 5vmin);
        height: calc(var(--size-knobs) + 5vmin);
    }
    /* Removed .xyz-balance; update .xyz-sensors-toggle */
    .xyz-sensors-toggle {
        width: 8vmin;
        height: 8vmin;
    }
    .playback-switch {
        width: 16vmin;
        height: 16vmin;
    }
    .lfo-interaction-button, .xyz-cosmic-lfo {
        width: 13vmin;
        height: 8vmin;
    }
    .xyz-param {
        width: 13vmin;
        height: 5vmin;
        font-size: 3vmin;
    }
    .transport-button,
    .interaction-button {
        width: 13vmin;
        height: 13vmin;
    }

    .playback-switch svg {
        width: 90%;
        height: 90%;

      }
}

/* Extra small screens (xs: <576px) */
@media (max-width: 575.98px) {
    .xyz-knobs {
        width: calc(var(--size-knobs) + 6vmin);
        height: calc(var(--size-knobs) + 6vmin);
    }
    /* Removed .xyz-balance; update .xyz-sensors-toggle */
    .xyz-sensors-toggle {
        width: 8vmin;
        height: 8vmin;
    }
    .playback-switch {
        width: 16vmin;
        height: 16vmin;
    }
    .lfo-interaction-button, .xyz-cosmic-lfo {
        width: 13vmin;
        height: 8vmin;
    }
    .xyz-param {
        width: 12vmin;
        height: 5vmin;
        font-size: 3.5vmin;
    }
    .transport-button,
    .interaction-button {
        width: 13vmin;
        height: 13vmin;
    }

    .playback-switch svg {
        width: 100%;
        height: 100%;

      }

      
}

/* Container Within Sub-frame */
.action-gui-subcontainer {
    width: 96%;
    max-width: 96%;
    display: flex;
    align-self: center;
    flex-direction: column;
    gap: 2vmin;
    box-sizing: border-box;
    position: relative; /* Allow absolute children */
}



#gSlider {
     /* More controlled size */
     width: calc(3vmin + 3vmax);
     height: 30vh;
}
/* Media Queries Adjustments */
@media (max-width: 1399.98px) {
    #gSlider {
    
        width: calc(4vmin + 4vmax);
        height: 30vh;
    }
}

/* Media Queries Adjustments */
@media (max-width: 1199.98px) {
    #gSlider {
    
        width: calc(4vmin + 4vmax);
        height: 30vh;
    }
}

@media (max-width: 991.98px) {
    #gSlider {
        
        width: calc(5vmin + 5vmax);
        height: 30vh;
    }
}

@media (max-width: 575.98px) {
    #gSlider {
    
        width: calc(6vmin + 6vmax);
        height: 30vh;
    }
}
/* Row Styling */
.action-gui-row {
    display: flex;
/*     justify-content: space-between;*/ 
    flex-wrap: nowrap; /* Prevent wrapping to new rows */
    align-items: end !important ;
    margin-bottom: 4vh !important;
    width: 100%;
    height: 20vh;
    max-width: 100%;
    margin: 0px auto;
    box-sizing: border-box;
    padding: 0 1vw;
}


  .dropdown,
  .dropup-center {
    pointer-events: auto;
    

  }
  .dropdown-menu,
  .dropup-center-menu {
    pointer-events: auto;
    min-width: 60px; /* Customize width */
  }
  
/* Interaction Button */
 .interaction-button {
    /*border: 2px solid var(--color1);  Add stroke */
    border-radius: 8px; /* Slightly rounded corners */
    background-color: transparent;
    color: var(--color1); /* Dynamic color */
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease, border-color 0.3s ease, color 0.3s ease;
}

.lfo-interaction-button {
/*     border: 1px solid var(--color1); 
    border-radius: 8px; /* Slightly rounded corners */
    background-color: transparent;
    color: var(--color1); /* Dynamic color for stroke */
    transition: transform 0.3s ease, border-color 0.3s ease, color 0.3s ease;
    padding: 0.1em; /* Consistent padding */
}

.lfo-interaction-button svg {
    fill: none; /* No fill */
    stroke: currentColor; /* Stroke inherits the color from the parent */
    stroke-width: 1.5px; /* Adjust stroke width as needed */
    transition: stroke 0.3s ease; /* Smooth transition for stroke color changes */
}


/* Hover and Focus State (Pressed but not hovered) */
.interaction-button:hover,
.interaction-button:focus {
    transform: scale(1.05);
    /*border-color: var(--color2);  Highlighted stroke */
    color: var(--color2); /* Highlighted color */
    outline: none; /* Remove default outline on focus */
    background-color: rgba(66, 66, 66, 0.8);

}

/* Icon in Button */
#interactionMenuIcon {
    display: inline-block;
    width: 50%; /* Adjust size relative to the button */
    height: 50%;
    color: inherit; /* Inherit currentColor */
}


/* Transport Button */
.transport-button {
    /*border: 2px solid var(--color1);  Add stroke */
    border-radius: 8px; /* Slightly rounded corners */
    background-color: transparent;
    color: var(--color1); /* Dynamic color */
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease, border-color 0.3s ease, color 0.3s ease;
}

/* Hover and Focus State (Pressed but not hovered) */
.transport-button:hover,
.transport-button:focus {
    transform: scale(1.05);
    /*border-color: var(--color2);  Highlighted stroke */
    color: var(--color2); /* Highlighted color */
    outline: none; /* Remove default outline on focus */
    background-color: rgba(66, 66, 66, 0.8);

}

/* Icon in Button */
#transportMenuIcon {
    display: inline-block;
    width: 50%; /* Adjust size relative to the button */
    height: 50%;
    color: inherit; /* Inherit currentColor */
}



/* Dropdown Menu Styling */
.dropdown-item {
    font-family: 'SpaceMono', sans-serif;
    padding: 0.5rem 1rem;
    display: flex;
    align-items: center;
    transition: background-color 0.3s ease, color 0.3s ease;
    
}

/* Default State for Dropdown Items */
.dropdown-item {
    background-color: transparent;
    color: #000000; /* White text */
    border-radius: 0px; /* Optional rounded corners */

}

/* Hover State for Dropdown Items */
.dropdown-item:hover {
    background-color:  #d9d9d9; /* Small grey background */
    border-radius: 0%; /* Optional rounded corners */
}

/* Dropdown Menu Icon Styling */
.menu-item-icon {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    margin-right: 8px;

}

.calibration-button {
    display: flex;
    align-items: center;
    gap: 8px;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 14px;
    transition: color 0.3s ease;
    pointer-events: auto;

}
.status-button {
    display: flex;
    align-items: center;
    gap: 8px;
    background: none;
    border: none;
    color: #F44336; /* Default: Red for disconnected */
    cursor: pointer;
    font-size: 14px;
    transition: color 0.3s ease;
    pointer-events: auto;

}

.status-button.connected {
    color: #4CAF50; /* Green for connected */
}

.status-button .button-icon svg {
    width: 24px;
    height: 24px;
    fill: currentColor;
}

/* Ensure .waveform fits inside the container */
.waveform-container {
    display: flex;
    margin-top: 2vh; /* Keeps the container at the bottom of the sub-frame */
    margin-bottom: 2vh; /* Keeps the container at the bottom of the sub-frame */
    flex-direction: column;
    justify-content: center; /* Centers vertically */
    align-items: center;     /* Centers horizontally */
    width: 100%;
    height: calc(var(--waveform-height) * 2); /* Example of setting container height */
    position: relative;
    background: #111; /* Just for visibility, optional */
}
.waveform {
    width: 100%;
    background: transparent;
    height: var(--waveform-height);
    position: relative;
    pointer-events: auto;

}

/* Cursor customization */
#waveform ::part(cursor) {
/*     top: 28px;
 */    border-radius: 4px;
    border: 1px solid var(--color2);
}

/* Custom cursor with elapsed time */
#waveform-time,
#waveform-duration {
    position: absolute;
    font-size: 12px;
    background: rgba(0, 0, 0, 0.75);
    padding: 3px 5px;
    color: #ddd;
    border-radius: 3px;
}

#waveform-time {
    left: 0;
}

#waveform-duration {
    right: 0;
}

/* Hover effect */
#waveform-hover {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 10;
    pointer-events: none;
    height: calc(var(--waveform-height) * 1.2);
    width: 0;
    mix-blend-mode: screen;
    background: rgba(0, 0, 0, 0.8);
}

/* On hover, subtly change the waveform color */
#waveform:hover #waveform-hover {
    opacity: 1;
    background: rgba(255, 255, 255, 0.2); /* Slightly stronger effect */
}


/* Adjust region marker styling */
#waveform ::part(marker) {
    background-color: var(--color1) !important;
    border: 1px solid var(--color2);
    
}


/* Ensure parent div is centered */
#zoom-container {
    display: flex;
    justify-content: flex-end;; /* Horizontally center */
    align-items: center; /* Vertically center if needed */
    width: 100%;
  }
  


  /* NOOOOT USEEED YET Base styling for playback switches */
.playback-switch {
    pointer-events: auto;
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 10px;
    transition: transform 0.2s ease-in-out, background-color 0.3s ease-in-out;
    width: 13vmin;
    height: 13vmin;
        /*border: 2px solid var(--color1);  Add stroke */
        border-radius: 8px; /* Slightly rounded corners */

        display: flex;
        align-items: center;
        justify-content: center;
  }
  
  /* Hover: scale only; no color change */
  .playback-switch:hover {
    transform: scale(1.1);
  }
  

  /* Group-specific base colors */
  .playback-switch.move-group-button {
    color: var(--color1);
  }
  
  .playback-switch.loop-group-button {
    color: var(--color2);
  }
  
  /* Override global .interaction-button hover/focus for move group */
  .playback-switch.move-group-button:hover,
  .playback-switch.move-group-button:focus {
    color: var(--color1) !important;
    transform: scale(1.1);
  }
  
  /* Override global .interaction-button hover/focus for loop group */
  .playback-switch.loop-group-button:hover,
  .playback-switch.loop-group-button:focus {
    color: var(--color2) !important;
    transform: scale(1.1);
  }
  
  /* Active state: add a background highlight (or border, if desired) */
  .playback-switch.active {
    background-color: rgba(66, 66, 66, 0.8);
  }
  
  /* In active state, ensure the SVG inherits the button’s currentColor */
  .playback-switch.active svg {
    fill: currentColor !important;
  }
  